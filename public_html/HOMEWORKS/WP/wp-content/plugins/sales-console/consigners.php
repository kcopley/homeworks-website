<?phpinclude_once 'bookmethods.php';include_once "includes.php";GenerateConsignerSearch()->Render();global $wpdb;switch (page_action::GetAction()) {	case action_types::$search_consigner:		search_consigners()->Render();		break;    case action_types::$update_consigner:        consigner_editing::UpdateConsigner(selection::GetConsigner());        select_consigner(selection::GetConsigner())->Render();        break;    case action_types::$add_consigner:        $consigner_id = consigner_addition::add_consigner();        select_consigner($consigner_id)->Render();        break;    case action_types::$remove_consigner:        consigner_properties::remove_consigner(selection::GetConsigner());        search_consigners()->Render();        break;    case action_types::$search:        $_REQUEST[consigner_request::$search_books] = true;        select_consigner(selection::GetConsigner())->Render();        break;    case action_types::$select_consigner:        select_consigner(selection::GetConsigner())->Render();        break;    case action_types::$add_book_to_consigner:        consigner_properties::add_book(selection::GetConsigner(), selection::GetBook());        select_consigner(selection::GetConsigner())->Render();        break;    case action_types::$remove_book_from_consigner:        consigner_properties::remove_book(selection::GetConsigner(), selection::GetBook());        select_consigner(selection::GetConsigner())->Render();        break;};function select_consigner($id) {    $consigner_id = consigner_properties::get_consigner_id($id);    if ($consigner_id == 0){        update_option('_cmb_consigner_owner', $id);    }    if (consigner_request::GetBackToBook()){        $backtoresults = new Form(method('post').action(consigner_request::GetBackToBook()),            book_request::Store(),            selection::InputBook(selection::GetBook()),            page_action::InputAction(action_types::$select_book),            button('Back to Book')        );    }    else {        $backtoresults = new Form(            consigner_request::Store(),            page_action::InputAction(action_types::$search_consigner),            new Input(id(consigner_request::$search_books).name(consigner_request::$search_books).value(false).type('hidden')),            button('Back to Search Results')        );    }    $table =        new TableArr(id('formtable').width(100).border(0).cellspacing(0).cellpadding(0),            new Row(                new Column(width(49).valign('top'),                    new TableArr(id('formtable').border(0).cellspacing(0).cellpadding(0).style('margin: 10px 0 10px;'),                        new Row(                            new Form(                                new Column(align('left'),                                    new Input(style('width: 90%; padding: 4px 3px 4px').type('text'),                                        id(consigner_editing::$name).name(consigner_editing::$name).value(consigner_properties::get_consigner_name($id)))                                ),                                new Column(align('center'),                                    new H4(new TextRender(consigner_properties::get_consigner_id($id)))                                ),                                new Column(align('left'),                                    new Input(style('width: 90%; padding: 4px 3px 4px').type('date'),                                        id(consigner_editing::$date).name(consigner_editing::$date).value(consigner_properties::get_consigner_date($id)))),                                new Column(                                    page_action::InputAction(action_types::$update_consigner),                                    consigner_request::Store(),                                    selection::InputConsigner($id),                                    button('Update')                                )                            ),                            new Column(                                $backtoresults                            )                        ),                        new Row(                            new Column(new H4(style('margin: 10px 0px 0px 0px;'), new TextRender('Books'))),                            new Column(new H4(style('margin: 10px 0px 0px 0px;'), new TextRender('ISBN'))),                            new Column(new H4(style('margin: 10px 0px 0px 0px;'), new TextRender('Cost'))),                            new Column(new H4(style('margin: 10px 0px 0px 0px;'), new TextRender('Barcode'))),                            new Column(width(6))                        ),                        new Row(new Column(colspan(5), new HR())),                        display_consigner_books($id),                        new Row(                            new Column(new H4(new TextRender('Books Sold'))),                            new Column(colspan(3), new HR()),                            new Column(new H4(align('center'), new TextRender('Paid?')))                        )                        //sold display here                    )                ),                new Column(width(2).style('border-right-style: solid; border-width: 1px; border-color: #D0D0D0;')),                new Column(width(2)),                new Column(                    new TableArr(style('margin: 10px 0 10px;'),                        new Row(align('left'), new TextRender('Book Search')),                        GenerateBookSearch($id),                        GenerateResults($id)                    )                )            )        );    return $table;}function display_consigner_books($id) {    $list = new RenderList();    $books = consigner_properties::get_books($id);    if (!empty($books) && consigner_properties::get_consigner_id($id) != 0) {        foreach ($books as $book) {            $list->add_object(                new Row(                    new Column(new TextRender(book_properties::get_book_title($book))),                    new Column(new TextRender(book_properties::get_book_isbn($book))),                    new Column(new TextRender('$'.book_properties::get_book_cost($book))),                    new Column(new TextRender(book_properties::get_book_barcode($book))),                    new Column(                        new Form(align('center'),                            page_action::InputAction(action_types::$remove_book_from_consigner),                            consigner_request::Store(),                            book_request::Store(),                            selection::InputConsigner($id),                            selection::InputBook($book),                            button('Remove')                        )                    )                )            );        }    }    return $list;}function sold_book_display_consigner($product_id, $paid) {    ?>    <tr>        <td><?php echo get_the_title($product_id); ?></td>        <td><?php echo get_book_sku($product_id); ?></td>        <td><?php echo get_book_cost($product_id); ?></td>        <td><?php echo get_book_barcode($product_id); ?></td>        <td align="center"><?php echo $paid; ?></td>    </tr>    <?php}function GenerateResults($id) {    $renderlist = new RenderList();    if (consigner_request::GetBookSearch()) {        $renderlist->add_object(            search_books(                array(                    book_properties::$title => true,                    book_properties::$barcode => true,                    book_properties::$publisher => true,                    book_properties::$isbn => true,                    book_properties::$consigner_id => $id                ),                new RenderList(                    selection::InputConsigner($id),                    consigner_request::Store()                )            )        );    }    return $renderlist;}function GenerateBookSearch($id) {    $usedOnly = false;    if ($id != consigner_properties::get_owner()){        $usedOnly = true;    }    $form = request_form_books($usedOnly);    $form->add_object(        selection::InputConsigner($id)    );    $form->add_object(        consigner_request::Store()    );    return new Row(        $form    );}function GenerateConsignerSearch(){    return new TableArr(border(0).cellpadding(0).cellspacing(0).width(40),        new Row(            request_form_consigners()        )    );}?>