<?phpinclude_once 'bookmethods.php';include_once "includes.php";GenerateTransactionSearch()->Render();global $wpdb;switch (page_action::GetAction()) {	case action_types::$search_transactions:		search_transactions()->Render();		break;    case action_types::$select_transaction:        transaction_properties::print_formatting(selection::GetTransaction());        select_transaction(selection::GetTransaction())->Render();        break;    case action_types::$delete_transaction:        transaction_properties::remove_transaction(selection::GetTransaction());        search_transactions()->Render();        break;};function select_transaction($transaction_post_id) {    $table = new TableArr(id('formtable').width(100).border(0).cellspacing(0).cellpadding(0).style('padding-top: 16px;'),        new Row(            new Column(                new TableArr(                    new Row(                        new Column(width(15), new H4(style('margin: 0px;'), new TextRender('Transaction ID'))),                        new Column(width(10), new H4(style('margin: 0px;'), new TextRender('Customer Name'))),                        new Column(width(10), new H4(style('margin: 0px;'), new TextRender('Total'))),                        new Column(width(10), new H4(style('margin: 0px;'), new TextRender('Date'))),                        new Column(width(35).align('right'))                    ),                    new Row(                        new Form(align('center'),                            new Column(style('font-weight: bold;'), new TextRender(transaction_properties::get_id($transaction_post_id))),                            new Column(style('font-weight: bold;'), new TextRender(transaction_properties::get_customer_name($transaction_post_id))),                            new Column(style('font-weight: bold;'), new TextRender('$'.number_format(transaction_properties::get_stored_total($transaction_post_id), 2))),                            new Column(style('font-weight: bold;'), new TextRender(transaction_properties::get_date($transaction_post_id))),                            new Column(),                            new Column(align('right'), new Input(classType('button-primary').onclick("printContent('toPrint');").type('button').value('Print Invoice')))                        ),                        new Column(align('right'),                            new Form(                                transaction_request::Store(),                                page_action::InputAction(action_types::$search_transactions),                                button('Back to Search Results')                            )                        )                    ),                    new Row(                        new Column(colspan(10).style('padding-top: 12px;'), new HR())                    )                )            )        ),        new Row(            new Column(get_book_list($transaction_post_id))        ),        new Row(            new Column(get_refund_list($transaction_post_id))        )    );    return $table;}function get_refund_list($id) {    $titlewidth = 20;    $otherwidth = 10;    $table = new RenderList();    if (!empty(transaction_properties::get_refunds($id))) {        $table = new TableArr(id('formtable') . width(100) . border(0) . cellspacing(0) . cellpadding(0).style('padding-top: 12px;'),            new Row(                new Column(width($titlewidth), new H4(style('margin: 0px;'), new TextRender('Refunds'))),                new Column(width($otherwidth), new H4(style('margin: 0px;'), new TextRender(''))),                new Column(width($otherwidth), new H4(style('margin: 0px;'), new TextRender(''))),                new Column(width($otherwidth), new H4(style('margin: 0px;'), new TextRender(''))),                new Column(width($otherwidth), new H4(style('margin: 0px;'), new TextRender(''))),                new Column(width($otherwidth), new H4(style('margin: 0px;'), new TextRender(''))),                new Column(width($otherwidth), new H4(style('margin: 0px;'), new TextRender(''))),                new Column(width($otherwidth)),                new Column()            )        );        $books = transaction_properties::get_refunds($id);        foreach ($books as $book) {            $table->add_object(refund_display_transaction($book));            $table->add_object(                new Row(style('border: none; padding: 0px; height: 1px;'),                    new Column(colspan(10) . style('padding-bottom: 0px;'),                        new HR(style('margin: 0px;')))));        }    }    return $table;}function get_book_list($id) {    $titlewidth = 20;    $otherwidth = 10;    $table = new TableArr(id('formtable').width(100).border(0).cellspacing(0).cellpadding(0),        new Row(            new Column(width($titlewidth), new H4(style('margin: 0px;'), new TextRender('Title'))),            new Column(width($otherwidth), new H4(style('margin: 0px;'), new TextRender('Publisher'))),            new Column(width($otherwidth), new H4(style('margin: 0px;'), new TextRender('ISBN'))),            new Column(width($otherwidth), new H4(style('margin: 0px;'), new TextRender('Barcode'))),            new Column(width($otherwidth), new H4(style('margin: 0px;'), new TextRender('Used/New'))),            new Column(width($otherwidth), new H4(style('margin: 0px;'), new TextRender('Quantity'))),            new Column(width($otherwidth), new H4(style('margin: 0px;'), new TextRender('Price'))),            new Column(width($otherwidth), new H4(style('margin: 0px;'), new TextRender('Refunded #'))),            new Column()        )    );    $books = transaction_properties::get_books($id);    foreach ($books as $book){        $table->add_object(book_display_transaction($book));        $table->add_object(            new Row(style('border: none; padding: 0px; height: 1px;'),                new Column(colspan(10).style('padding-bottom: 0px;'),                    new HR(style('margin: 0px;')))));    }    return $table;}function book_display_transaction($book) {    $book_id = $book[transaction_properties::$book_id];    $quantity = $book[transaction_properties::$book_quantity];    $price = $book[transaction_properties::$book_price];    $refunded = $book[transaction_properties::$book_refunded_quantity];    return new Row(        new Column(style('padding-top: 6px; padding-bottom: 6px;'),            new TextRender(book_properties::get_book_title($book_id))),        new Column(style('padding-top: 6px; padding-bottom: 6px;'),            new TextRender(book_properties::get_book_publisher($book_id))),        new Column(style('padding-top: 6px; padding-bottom: 6px;'),            new TextRender(book_properties::get_book_isbn($book_id))),        new Column(style('padding-top: 6px; padding-bottom: 6px;'),            new TextRender(book_properties::get_book_barcode($book_id))),        new Column(style('padding-top: 6px; padding-bottom: 6px;'),            new TextRender(book_properties::get_book_condition($book_id))),        new Column(style('padding-top: 6px; padding-bottom: 6px;'),            new TextRender($quantity)),        new Column(style('padding-top: 6px; padding-bottom: 6px;'),            new TextRender('$'.number_format($price, 2))),        new Column(style('padding-top: 6px; padding-bottom: 6px;'),            new TextRender($refunded))    );}function refund_display_transaction($book) {    $book_id = $book[transaction_properties::$book_id];    $quantity = $book[transaction_properties::$book_quantity];    $price = $book[transaction_properties::$book_price];    return new Row(        new Column(style('padding-top: 6px; padding-bottom: 6px;'),            new TextRender(book_properties::get_book_title($book_id))),        new Column(style('padding-top: 6px; padding-bottom: 6px;'),            new TextRender(book_properties::get_book_publisher($book_id))),        new Column(style('padding-top: 6px; padding-bottom: 6px;'),            new TextRender(book_properties::get_book_isbn($book_id))),        new Column(style('padding-top: 6px; padding-bottom: 6px;'),            new TextRender(book_properties::get_book_barcode($book_id))),        new Column(style('padding-top: 6px; padding-bottom: 6px;'),            new TextRender(book_properties::get_book_condition($book_id))),        new Column(style('padding-top: 6px; padding-bottom: 6px;'),            new TextRender($quantity)),        new Column(style('padding-top: 6px; padding-bottom: 6px;'),            new TextRender('$'.number_format($price, 2))),        new Column()    );}function GenerateTransactionSearch(){    return new TableArr(border(0).cellpadding(0).cellspacing(0).width(40),        new Row(            request_form_transactions()        ),        new Row(            new Column(colspan(10), new HR())        )    );}?>